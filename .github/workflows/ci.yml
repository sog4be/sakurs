name: CI

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]
  workflow_dispatch:

env:
  CARGO_TERM_COLOR: always
  RUST_BACKTRACE: 1

jobs:
  # Fast checks that run first to fail quickly
  quick-checks:
    name: Quick Checks (Format & Clippy)
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - uses: dtolnay/rust-toolchain@stable
        with:
          components: rustfmt, clippy
      - uses: Swatinem/rust-cache@v2
      - name: Check formatting
        run: cargo fmt --all -- --check
      - name: Run clippy
        run: cargo clippy --all-features --workspace -- -D warnings

  test:
    name: Test
    runs-on: ${{ matrix.os }}
    needs: quick-checks  # Only run tests if quick checks pass
    strategy:
      fail-fast: true  # Stop all jobs if one fails
      matrix:
        os: [ubuntu-latest, windows-latest, macos-latest]
        rust: [stable, 1.81.0]  # MSRV
    steps:
      - uses: actions/checkout@v4
      - uses: dtolnay/rust-toolchain@master
        with:
          toolchain: ${{ matrix.rust }}
      - uses: Swatinem/rust-cache@v2
      - run: cargo test --all-features --workspace --exclude sakurs-py
      
      # Check sakurs-py separately (can't run normal tests for extension modules)
      - name: Check sakurs-py compilation
        run: cargo check -p sakurs-py --all-features
      - name: Check sakurs-py with clippy
        run: cargo clippy -p sakurs-py --all-features -- -D warnings

  # Benchmarks temporarily disabled due to migration from TextProcessor to SentenceProcessor
  # See issue for details on required fixes
  # benchmark:
  #   name: Benchmark
  #   runs-on: ubuntu-latest
  #   needs: [quick-checks, test]  # Only run benchmarks if all tests pass
  #   timeout-minutes: 10
  #   steps:
  #     - uses: actions/checkout@v4
  #     - uses: dtolnay/rust-toolchain@stable
  #     - uses: Swatinem/rust-cache@v2
  #     - name: Run benchmarks
  #       run: CRITERION_FAST=1 cargo bench --bench application_benchmarks --profile=bench
  #       timeout-minutes: 6
  #     - name: Store benchmark results
  #       uses: actions/upload-artifact@v4
  #       if: always()
  #       with:
  #         name: benchmark-results
  #         path: target/criterion/

  # Success job for branch protection rules
  ci-success:
    name: CI Success
    if: ${{ always() }}
    runs-on: ubuntu-latest
    needs: [quick-checks, test]  # Removed benchmark from dependencies
    steps:
      - name: Check if all CI jobs passed
        run: |
          if [[ "${{ needs.quick-checks.result }}" != "success" || \
                "${{ needs.test.result }}" != "success" ]]; then
            echo "One or more CI jobs failed"
            echo "Quick checks: ${{ needs.quick-checks.result }}"
            echo "Test: ${{ needs.test.result }}"
            exit 1
          fi
          echo "All CI jobs passed successfully"
