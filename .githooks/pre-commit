#!/bin/sh
# Pre-commit hook for Rust projects
# Runs cargo fmt, clippy, and tests to match CI requirements

set -eu

# Colors for output
RED='\033[0;31m'
GREEN='\033[0;32m'
YELLOW='\033[1;33m'
NC='\033[0m' # No Color

echo "üîç Running pre-commit checks..."

# 1. Check formatting
echo "üìù Checking code formatting..."
if ! cargo fmt --all -- --check; then
    echo "${RED}‚ùå Code formatting issues found!${NC}"
    echo "üí° Run: cargo fmt --all"
    exit 1
fi

# 2. Run clippy with warnings as errors (matching CI configuration)
echo "üîß Running clippy..."
if ! cargo clippy --all-features --workspace -- -D warnings; then
    echo "${RED}‚ùå Clippy issues found!${NC}"
    
    # Provide helpful context for common issues
    echo ""
    echo "${YELLOW}üí° Common clippy issues and fixes:${NC}"
    echo "   - uninlined-format-args: Use format!(\"{var}\") instead of format!(\"{}\", var)"
    echo "   - Use #[allow(clippy::lint_name)] to suppress specific warnings if needed"
    echo "   - Run 'cargo clippy --fix' for automatic fixes (review changes carefully)"
    exit 1
fi

# 3. Run tests (can be skipped with SKIP_TESTS=1)
if [ "${SKIP_TESTS:-0}" != "1" ]; then
    echo "üß™ Running tests..."
    if ! cargo test --workspace; then
        echo "${RED}‚ùå Tests failed!${NC}"
        exit 1
    fi
else
    echo "‚è≠Ô∏è  Skipping tests (SKIP_TESTS=1)"
fi

# 4. Check Python code if sakurs-py exists
if [ -d "sakurs-py" ]; then
    echo "üêç Checking Python code..."
    
    # Run ruff checks using uv
    if command -v uv >/dev/null 2>&1; then
        if ! (cd sakurs-py && uv run ruff check .); then
            echo "${RED}‚ùå Python linting failed!${NC}"
            echo "üí° Run: cd sakurs-py && uv run ruff check --fix ."
            exit 1
        fi
        
        if ! (cd sakurs-py && uv run ruff format --check .); then
            echo "${RED}‚ùå Python formatting issues found!${NC}"
            echo "üí° Run: cd sakurs-py && uv run ruff format ."
            exit 1
        fi
    else
        echo "${YELLOW}‚ö†Ô∏è  uv not found. Install with: curl -LsSf https://astral.sh/uv/install.sh | sh${NC}"
    fi
    
    # Run mypy type checks using uv
    if command -v uv >/dev/null 2>&1; then
        echo "üîç Running mypy type checks..."
        if ! (cd sakurs-py && uv run mypy . --config-file ../pyproject.toml); then
            echo "${RED}‚ùå Type checking failed!${NC}"
            echo "üí° Fix type errors reported by mypy"
            exit 1
        fi
    else
        echo "${YELLOW}‚ö†Ô∏è  uv not found. Install with: curl -LsSf https://astral.sh/uv/install.sh | sh${NC}"
    fi
fi

# 5. Check compilation
echo "‚öôÔ∏è Checking compilation..."
if ! cargo check --workspace; then
    echo "${RED}‚ùå Compilation check failed!${NC}"
    exit 1
fi

echo "${GREEN}‚úÖ All pre-commit checks passed!${NC}"
exit 0